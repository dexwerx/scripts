# SciTE User properties
# 2013.12.03 - Dexter Freivald

[theme]
# --- dark theme --------------------------------------------------------------
# name colors only work in styles
t.aqua=#37baff
t.black=#000000
#~ t.orange=#ffa600
t.orange=#ffb833
t.green=#b7f733
t.lightgreen=#dcfb9d
t.lime=#e9f693
t.lightyellow=#ffff9e
t.greenwhite=#d9ffd3
t.darkolive=#404640
#t.darkolive=#303630
t.skyblue=#9cffff
#~ t.skyblue=#A2FFF7
t.bluewhite=#d1ffff
#~ t.bluewhite=#d1e8ff
#~ t.cyan=#46ecd3
t.cyan=#19d3c8
t.teal=#009e9e
#t.cyan=#66d9ef
t.pink=#fc258b
t.pink=#fc007f
#~ t.pink=#e00072
t.darkred=#513141

#~ t.pink=#f92672
t.maroon=#990026
t.royalblue=#586df0

t.royalpurple=#7373f0
t.purple=#796fff
t.purplewhite=#d9d6ff
t.lightpurple=#928aff
t.midpurple=#b9b6ff
#~ t.perrywinkle=#5890ff
t.perrywinkle=#94c9ff
t.darkpurple=#303050
t.lightblack=#222222
t.coal=#333333
#t.midnight=#3a3c40
t.midnight=#383a3d
#t.midnight=#1b1d1e
#t.charcoal=#444444
t.charcoal=#414141
t.charcoal=#333538
t.charcoal2=#565656
t.charcoal2=#484848
t.darkgrey=#6b7c85
t.darkergrey=#5c6d72
#~ t.cadetblue=#6688aa
#~ t.cadetblue=#B5E3E7
#~ t.cadetblue=#C8D9DA
t.cadetblue=#b0c1c3
#~ t.cadetblue=#9cbcc9
#~ t.cadetblue=#92A4B6
t.darkcadetblue=#667799
t.grey=#aaaaaa
t.silver=#cccccc
#~ t.offwhite=#f8fafa
#~ t.offwhite=#eaf0f0
t.offwhite=#f0efe0
#~ t.offwhite=#f8f8ea
t.white=#ffffff
t.white=#fefef0
t.black=#000000


[styles]
# --- styles ------------------------------------------------------------------
font.small=font:Verdana,size:8
font.vbs=$(font.base)
# console fonts from http://www.ank.com.ar/fonts/
#~ font.output=font:8x13-ISO8859-1,size:10
#~ font.output=font:Lucida Console,size:10
font.output=font:FixedSys

#~ font.monospace=font:Courier New,size:11
#~ font.monospace=font:8x13-ISO8859-1,size:11
#~ font.monospace=font:Bitstream Vera Sans,size:11
#~ font.monospace=font:DejaVu Sans Mono,size:11
#~ font.monospace=font:DejaVu Sans Mono,size:10
font.monospace=font:DejaVu Sans Mono,size:9
#~ font.monospace=font:Consolas,size:11
#~ font.monospace=font:Lucida Console,size:10
#~ font.monospace=font:Dina,size:11
#~ font.monospace=font:Andale Mono,size:11

font.text=$(font.monospace)
font.base=$(font.monospace)
font.code.base=$(font.base)

font.comment=$(font.base),italics
font.code.comment.box=$(font.base),italics
font.code.comment.line=$(font.base),italics
font.code.comment.doc=$(font.base),italics
font.code.comment.nested=$(font.base),italics
font.text.comment=$(font.base),italics
font.embedded.comment=$(font.comment)




style.*.32=$(font.base)
style.*.32=fore:$(t.white),back:$(t.charcoal),$(font.base)
# Line number
#~ style.*.33=font:Verdana,size:11,fore:$(t.darkgrey),back:$(t.darkpurple)
#~ style.*.33=font:Verdana,size:11,fore:$(t.silver),back:$(t.darkpurple)
#~ style.*.33=font:Verdana,size:11,fore:$(t.lightpurple),back:$(t.darkpurple)
style.*.33=font:Verdana,size:10,fore:$(t.bluewhite),back:$(t.darkpurple)
# Brace highlight
style.*.34=fore:$(t.cyan),bold
# Brace incomplete highlight
style.*.35=fore:$(t.cyan),bold
# Control characters
style.*.36=fore:$(t.darkgrey)
# Indentation guides
style.*.37=fore:$(t.darkgrey)
style.*.37=fore:$(t.charcoal2)
view.indentation.guides=1

colour.code.comment.box=fore:$(t.darkgrey)
colour.code.comment.line=fore:$(t.darkgrey)
colour.code.comment.doc=fore:$(t.darkgrey)
colour.text.comment=fore:$(t.darkgrey)
colour.other.comment=fore:$(t.darkgrey)
colour.embedded.comment=fore:$(t.darkgrey)
colour.embedded.js=back:$(t.coal)
colour.notused=back:$(t.charcoal)
colour.number=fore:$(t.skyblue)
#colour.number=fore:$(t.lightpurple)
#colour.keyword=fore:$(t.pink)
colour.keyword=fore:$(t.bluewhite)
#colour.string=fore:$(t.bluewhite)
colour.string=fore:$(t.silver),back:(t.midnight)
colour.char=fore:$(t.bluewhite)
colour.operator=fore:$(t.grey)
colour.preproc=fore:$(t.green)
colour.error=fore:$(t.skyblue),back:$(t.green)


[options]

magnification=-1
output.magnification=-1

position.left=
position.top=
position.width=
position.height=
command.help.*.java=$(CurrentWord)!$(SciteDefaultHome)\man\jdk14.chm
command.help.*.php=$(CurrentWord)!$(SciteDefaultHome)\man\php_manual_en.chm
command.help.subsystem.*.java=4
command.help.subsystem.*.php=4

command.name.20.*=Reformat
command.20.*=cscript /nologo "$(SciteDefaultHome)\tools\formatall.js" "$(SciteDefaultHome)\tools" "$(FilePath)"
command.quiet.20.*=1
command.is.filter.20.*=1
command.save.before.20.*=1
command.shortcut.20.*=Ctrl+Alt+L

command.name.7.*=Convert Tabs to Spaces (TAB_STOP 8)
command.7.*=cscript /nologo "$(SciteDefaultHome)\tools\tabs2spaces.js" "$(FilePath)"
command.quiet.7.*=1
command.is.filter.7.*=1
command.save.before.7.*=1

command.name.8.*=Convert Tabs to Spaces (TAB_STOP 4)
command.8.*=cscript /nologo "$(SciteDefaultHome)\tools\tabs2spaces.js" "$(FilePath)" 4
#~ command.quiet.8.*=1
command.is.filter.8.*=1
command.save.before.8.*=1

command.name.9.*=Strip trailing spaces
command.9.*=cscript /nologo "$(SciteDefaultHome)\tools\stripspace.js" "$(FilePath)"
#~ command.quiet.9.*=1
command.is.filter.9.*=1
command.save.before.9.*=1

command.name.10.*=Strip last empty lines
command.10.*=cscript /nologo "$(SciteDefaultHome)\tools\striplines.js" "$(FilePath)"
command.quiet.10.*=1
command.is.filter.10.*=1
command.save.before.10.*=1

command.name.11.*=Sort File
command.11.*=cscript /nologo "$(SciteDefaultHome)\tools\sort.js" "$(FilePath)"
command.quiet.11.*=1
command.is.filter.11.*=1
command.save.before.11.*=1
command.shortcut.11.*=Ctrl+Alt+S

#Open containing folder
command.name.4.*=Open Containing Folder
command.subsystem.4.*=2
command.4.*=explorer "$(FileDir)\"



#~ position.width=900
#~ position.height=600
#~ position.width=
#~ position.height=

#~ edge.column=80
#~ edge.mode=1
#~ edge.colour=#C0DCC0
#~ edge.colour=$(t.darkergrey)
edge.mode=0

find.mark=#0000FF

selection.fore=#ffffff
selection.back=#4060c0
selection.alpha=256
bookmark.fore=#ffffff
bookmark.back=#303050
bookmark.alpha=100

minimize.to.tray=1
toolbar.visible=0
statusbar.visible=1
full.screen.hides.menu=0
horizontal.scrollbar=1
horizontal.scroll.width.tracking=1
horizontal.scroll.width=80
split.vertical=0
output.vertical.size=200
output.initial.hide=1
output.horizontal.scrollbar=1
output.horizontal.scroll.width=80
#output.scroll=0
end.at.last.line=0


tabbar.visible=1
tabbar.hide.one=0
tabbar.multiline=1
toolbar.visible=0
#~ toolbar.detachable=1
#~ toolbar.usestockicons=1
menubar.detachable=0
#undo.redo.lazy=1
#statusbar.visible=1


# Status Bar
statusbar.number=3
statusbar.text.1=[P:$(LineNumber),$(ColumnNumber)] [L:$(NbOfLines)] [C:$(SelLength)/$(BufferLength)] [$(OverType)] [$(EOLMode)] $(FileDir)
statusbar.text.2= $(FilePath) : $(FileDate) $(FileTime) $(FileAttr)
statusbar.text.3=Current Date $(CurrentDate) $(CurrentTime)


# Checking
are.you.sure=1
#are.you.sure.for.build=1
#save.all.for.build=1
#quit.on.close.last=1
load.on.activate=1
#save.on.deactivate=1
#are.you.sure.on.reload=1
#reload.preserves.undo=1
check.if.already.open=1
default.file.ext=.cxx
#source.default.extensions=.h|.cxx|.bat
#title.full.path=1
title.show.buffers=0
save.recent=1
save.session=1
session.bookmarks=1
#session.folds=1
#save.position=1
open.dialog.in.file.directory=1
strip.trailing.spaces=1
#ensure.final.line.end=1
#ensure.consistent.line.ends=1
#save.deletes.first=1
buffers=30
buffers.zorder.switching=1
#api.*.cxx=d:\api\w.api
#win95.death.delay=1000
#locale.properties=locale.de.properties
#translation.missing=***
#read.only=1
#max.file.size=1


# Indentation
tabsize=4
indent.size=4
# set use.tabs=0 to use spaces
use.tabs=1
#~ indent.auto=1
#~ indent.automatic=1
indent.opening=0
indent.closing=1
tab.indents=1
backspace.unindents=1

view.whitespace=0
view.indentation.whitespace=1
whitespace.fore=#5c6d72

caret.fore=#ffffff
caret.line.back=#ffffff
caret.line.back.alpha=16
caret.width=2

#autocompleteword.automatic=1
#autocomplete.choose.single=1
find.replace.advanced=1

# Sizes and visibility in edit pane
fold.symbols=1
fold.flags=0
line.margin.visible=1
line.margin.width=4+
margin.width=0
fold.margin.width=12
fold.margin.colour=#546269
fold.margin.highlight.colour=#748289
fold.margin.highlight.colour=#666666
#~ fold.margin.highlight.colour=#546269
blank.margin.left=2
blank.margin.right=0
buffered.draw=1
two.phase.draw=1
use.palette=1


source.files=*.asm;*.c;*.cpp;*.cs;;*.css;*.cxx;*.h;*.hxx;*.hpp;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pl;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.html;*.xml;*.iface;*.bat;*.e;*.php;*.sql;*.aql;*.dbquery

open.filter=\
All Source|$(source.files)|\
$(all.files)\
$(filter.ada)\
$(filter.conf)\
$(filter.asm)\
$(filter.bash)\
$(filter.cmake)\
$(filter.cpp)\
$(filter.css)\
$(filter.d)\
$(filter.eiffel)\
$(filter.erlang)\
$(filter.fortran)\
$(filter.idl)\
$(filter.inno)\
$(filter.java)\
$(filter.js)\
$(filter.lua)\
$(filter.matlab)\
$(filter.pascal)\
$(filter.perl)\
$(filter.php)\
$(filter.powershell)\
$(filter.properties)\
$(filter.ps)\
$(filter.python)\
$(filter.r)\
$(filter.ruby)\
$(filter.sql)\
$(filter.tcl)\
$(filter.tex)\
$(filter.text)\
$(filter.vb)\
$(filter.verilog)\
$(filter.vhdl)


# Define the Lexer menu,
# Each item contains three parts: menu string | file extension | key
# The only keys allowed currently are based on F-keys and alphabetic keys and look like
# [Ctrl+][Shift+][Fn|a] such as F12 or Ctrl+Shift+D.
# A '&' may be placed before a letter to be used as an accelerator. This does not work on GTK+.
menu.language=\
#FreeBasic|bas||\
Text|txt|Shift+F11|\
Ada|ads||\
#Apache Confi&g|conf||\
Assembler|asm||\
#ASN.1|asn1||\
#Avenue|ave||\
#Baan|bc||\
&Batch|bat||\
#Bullant|ant||\
&C / C++|c||\
#CMake|cmake||\
C&#|cs||\
#Csound|orc||\
CSS|css||\
D|d||\
&Difference|diff||\
#&Eiffel|e||\
#Erlang|erl||\
&Errorlist|err||\
#FlagShip|prg||\
#Forth|forth||\
&Fortran|f90||\
#Gap|g||\
H&ypertext|html|F12|\
#&InnoSetup|iss||\
&Java|java||\
Java&Script|js||\
#&Kix|kix||\
TeX|tex||\
Lisp|lisp||\
#Lot|lot||\
#Lout|lt||\
Lu&a|lua||\
Matlab|m.matlab||\
&Makefile|mak|Ctrl+Shift+F11|\
MySQL|mysql||\
#MetaPost|mp||\
#MMIXAL|mms||\
#&nnCron crontab|tab||\
#NSIS|nsis||\
#Objective Caml|ml||\
#Octave|m.octave||\
#Opal|impl||\
Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
#P&LSQL|spec||\
#P&ostScript|ps||\
#P&OV-Ray SDL|pov||\
#PowerShell|ps1||\
&Properties|properties||\
Pytho&n|py||\
R|R||\
#Reso&urce|rc||\
Ruby|rb||\
Shell|sh||\
S&QL|sql||\
#Specman|e||\
&TCL|tcl||\
&VB|vb||\
VBScr&ipt|vbs||\
#Verilog|v||\
#VHDL|vhd||\
&XML|xml|Shift+F12|\
YAML|yaml||

# User defined key commands
user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
#~ Ctrl+PageUp|IDM_PREVFILE|\
#~ Ctrl+PageDown|IDM_NEXTFILE|\
KeypadPlus|IDM_EXPAND|\
Shift+KeypadPlus|IDM_TOGGLE_FOLDALL|\
KeypadMinus|IDM_BLOCK_COMMENT|

#~ user.context.menu=\
#~ ||\
#~ Next File|IDM_NEXTFILE|\
#~ Prev File|IDM_PREVFILE|


#~ # Load the PHP api file
#~ api.$(file.patterns.php)=$(SciteDefaultHome)/php.api
#~ # Call Tips settings
#~ calltip.hypertext.end.definition=)
#~ calltip.hypertext.word.characters=->_$(chars.alpha)
#~ calltip.hypertext.ignorecase=1
#~ # Autocomplete settings
#~ autocomplete.hypertext.start.characters=$->(chars.alpha)
#~ autocomplete.hypertext.ignorecase=1



[cppjs]
# --- CPP styles and behavior -------------------------------------------------

file.patterns.js=*.js;*.es;*.pac

comment.block.cpp=///
comment.block.at.line.start.cpp=1
comment.stream.start.cpp=/*
comment.stream.end.cpp=*/
comment.box.start.cpp=/*
comment.box.middle.cpp= *
comment.box.end.cpp= */
#fold.at.else=1
styling.within.preprocessor=1

# C++ styles

# Default
style.cpp.32=
# White space
style.cpp.0=fore:$(t.darkgrey)
# Comment: /* */.
style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment: //.
style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment: block comments beginning with /** or /*!
style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc)
# Number
style.cpp.4=fore:$(t.skyblue)
#~ style.cpp.4=fore:$(t.cyan)
#~ style.cpp.4=fore:$(t.cadetblue)
#~ style.cpp.4=fore:#6DECFF
#~ style.cpp.4=fore:$(t.lightpurple)
style.cpp.4=fore:$(t.pink)
# Keyword
style.cpp.5=fore:$(t.bluewhite)
#~ style.cpp.5=fore:#CCFFF3
#~ style.cpp.5=fore:$(t.lightpurple)
#~ style.cpp.5=fore:$(t.cyan)
#~ style.cpp.5=fore:#A6F7FF
#~ style.cpp.5=fore:#FF295E
#~ style.cpp.5=fore:#D1C2FF
#~ style.cpp.5=fore:#A3F1FF
style.cpp.5=fore:$(t.cyan)
#~ style.cpp.5=fore:$(t.pink)
# Double quoted string
style.cpp.6=fore:$(t.silver),back:$(t.midnight)
#~ style.cpp.6=fore:$(t.pink),back:$(t.darkred)
#~ style.cpp.6=fore:$(t.cadetblue),back:$(t.midnight)
#~ style.cpp.6=fore:#C6D8DF,back:$(t.midnight)
#~ style.cpp.6=fore:$(t.purple),back:$(t.darkpurple)
style.cpp.6=fore:$(t.purple),back:$(t.midnight)
style.cpp.6=fore:$(t.purple)
#~ style.cpp.6=fore:#C2D1FF,back:$(t.midnight)
# Single quoted string
#~ style.cpp.7=fore:$(t.cadetblue),back:$(t.midnight)
#~ style.cpp.7=fore:$(t.silver),back:$(t.midnight)
style.cpp.7=fore:$(t.purple),back:$(t.midnight)
style.cpp.7=fore:$(t.purple)
# UUIDs (only in IDL)
style.cpp.8=fore:$(t.greenwhite),back:$(t.darkolive)
# Preprocessor
#~ style.cpp.9=fore:$(t.green)
#~ style.cpp.9=fore:#B1EB39
style.cpp.9=fore:$(t.lime)
# Operators
style.cpp.10=fore:$(t.grey)
#~ style.cpp.10=fore:#f0f0b0
#~ style.cpp.10=fore:$(t.lime)
#~ style.cpp.10=fore:$(t.green)
#~ style.cpp.10=fore:$(t.skyblue)
#~ style.cpp.10=fore:$(t.pink)
#~ style.cpp.10=fore:$(t.silver)
style.cpp.10=fore:$(t.grey)

# Identifiers
style.cpp.11=fore:$(t.white)
# End of line where string is not closed
style.cpp.12=fore:$(t.bluewhite),back:$(t.lightblack),eolfilled
# Verbatim strings for C#
style.cpp.13=fore:$(t.greenwhite),back:$(t.darkolive),eolfilled
# Regular expressions for JavaScript
#~ style.cpp.14=fore:$(t.lightpurple),$(font.monospace),back:$(t.darkpurple),eolfilled
style.cpp.14=fore:$(t.greenwhite),$(font.monospace),back:$(t.darkolive),eolfilled
style.cpp.14=fore:$(t.green),$(font.monospace),back:$(t.darkolive),eolfilled,
#~ style.cpp.14=fore:$(t.skyblue),$(font.monospace),back:$(t.charcoal2),eolfilled
# Doc Comment Line: line comments beginning with /// or //!.
style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)
# Keywords2
style.cpp.16=fore:$(t.orange)
# Comment keyword
style.cpp.17=fore:$(t.silver),$(font.code.comment.doc)
# Comment keyword error
style.cpp.18=fore:$(t.orange),$(font.code.comment.doc)
# Braces are only matched in operator style
braces.cpp.style=10



# --- Properties styles -------------------------------------------------------
[properties]
# Default
style.props.0=
# Comment
style.props.1=fore:$(t.darkgrey),$(font.comment)
# Section
style.props.2=fore:$(t.green),back:$(t.darkolive),eolfilled
# Assignment operator
style.props.3=fore:$(t.skyblue)
# Default value (@)
style.props.4=$(t.cyan)
# Key
style.props.5=
# Matched Operators
style.props.34=fore:$(t.green)
style.props.35=fore:$(t.green)
comment.block.props=#~

# --- Error list / Output pane styles -----------------------------------------
[errorlist]
error.marker.fore=$(t.pink)
error.marker.back=$(t.black)

style.errorlist.32=$(font.output),fore:$(t.silver),back:$(t.lightblack)

# Default
style.errorlist.0=fore:$(t.silver)
# python Error
style.errorlist.1=fore:$(t.silver)
# gcc Error / Javascript output / Find output
style.errorlist.2=fore:$(t.silver)
# Microsoft Error
style.errorlist.3=fore:$(t.silver)
# command or return status
style.errorlist.4=fore:$(t.skyblue)
# Borland error and warning messages
style.errorlist.5=fore:$(t.silver)
# perl error and warning messages
style.errorlist.6=fore:$(t.silver)
# .NET tracebacks
style.errorlist.7=fore:$(t.silver)
# Lua error and warning messages
style.errorlist.8=fore:$(t.silver)
# ctags
style.errorlist.9=fore:$(t.silver)
# diff changed !
style.errorlist.10=fore:$(t.silver)
# diff addition +
style.errorlist.11=fore:$(t.silver)
# diff deletion -
style.errorlist.12=fore:$(t.silver)
# diff message ---
style.errorlist.13=fore:$(t.silver)
# PHP error
style.errorlist.14=fore:$(t.silver)
# Essential Lahey Fortran 90 error
style.errorlist.15=fore:$(t.silver)
# Intel Fortran Compiler error
style.errorlist.16=fore:$(t.silver)
# Intel Fortran Compiler v8.0 error/warning
style.errorlist.17=fore:$(t.silver)
# Absoft Pro Fortran 90/95 v8.2 error or warning
style.errorlist.18=fore:$(t.silver)
# HTML Tidy
style.errorlist.19=fore:$(t.silver)
# Java runtime stack trace
style.errorlist.20=fore:$(t.silver)
# Text matched with find in files and message part of GCC errors
style.errorlist.21=fore:$(t.darkgrey)
# Ensures that spacing is not affected by line number styles
style.errorlist.33=$(font.small)


# --- HTML and Embedded styles ------------------------------------------------
[html]
# HTML and XML share lexing code so use the same style numbers
# Hypertext Markup Language
comment.stream.start.hypertext=<!--
comment.stream.end.hypertext=-->
comment.block.hypertext=///
comment.block.at.line.start.hypertext=1

# Text
#~ style.hypertext.0=fore:$(t.lightpurple),$(font.text)
style.hypertext.0=fore:$(t.skyblue),$(font.text)
# Tags
#~ style.hypertext.1=fore:$(t.cyan)
#~ style.hypertext.1=fore:$(t.skyblue)
style.hypertext.1=fore:$(t.white)
# Unknown Tags
style.hypertext.2=fore:$(t.green)
# Attributes
#~ style.hypertext.3=fore:$(t.silver)
style.hypertext.3=fore:$(t.white)
# Unknown Attributes
style.hypertext.4=fore:$(t.cyan)
# Numbers
style.hypertext.5=$(t.cyan)
# Double quoted strings
#~ style.hypertext.6=fore:$(t.bluewhite)
#~ style.hypertext.6=fore:$(t.cadetblue)
style.hypertext.6=fore:$(t.silver)
# Single quoted strings
style.hypertext.7=fore:$(t.silver)
# Other inside tag
style.hypertext.8=fore:$(t.grey)
#~ style.hypertext.8=fore:$(t.cadetblue)
# Comment
style.hypertext.9=$(colour.code.comment.box)
# Entities
style.hypertext.10=fore:$(t.bluewhite),$(font.text)
# XML style tag ends '/>'
style.hypertext.11=$(style.hypertext.1)
# XML identifier start '<?'
style.hypertext.12=fore:#0000FF
# XML identifier end '?>'
style.hypertext.13=fore:#0000FF
#  SCRIPT
style.hypertext.14=fore:#000080
# ASP <% ... %>
style.hypertext.15=back:#FFFF00
# ASP <% ... %>
style.hypertext.16=back:#FFDF00
# CDATA
style.hypertext.17=back:#222222
# PHP
style.hypertext.18=fore:$(t.green),back:$(t.midnight),bold
# Unquoted values
style.hypertext.19=fore:$(t.greenwhite),back:#444444
# JSP Comment <%-- ... --%>
style.hypertext.20=fore:#000000,back:#FFFFD0
# SGML tags <! ... >
style.hypertext.21=fore:$(t.cyan),back:$(t.darkpurple)
# SGML command
style.hypertext.22=fore:$(t.cyan),back:$(t.darkpurple),bold
# SGML 1st param
style.hypertext.23=fore:$(t.white),back:$(t.darkpurple)
# SGML double string
style.hypertext.24=fore:$(t.bluewhite),back:$(t.darkpurple)
# SGML single string
style.hypertext.25=fore:$(t.silver),back:$(t.darkpurple)
# SGML error
style.hypertext.26=fore:#800000,back:$(t.midnight)
# SGML special (#xxxx type)
style.hypertext.27=fore:#3366FF,back:$(t.midnight)
# SGML entity
style.hypertext.28=fore:#333333,back:$(t.midnight)
# SGML comment
style.hypertext.29=fore:#808000,back:$(t.midnight)
# SGML block
style.hypertext.31=fore:#000066,back:$(t.midnight)
# Some reasonable background colours found in the default Windows palette
# Off White #FFFBF0    Light green #C0DCC0    Light Blue #A6CAF0
# Matched Operators
#~ style.hypertext.32=fore:#46ecd3,$(font.text)
style.hypertext.34=fore:$(t.lightpurple),bold,$(font.text)
style.hypertext.35=fore:$(t.lightpurple),$(font.text)
[htmljs]
# Embedded Javascript
fontcolour.js=$(colour.embedded.js),$(font.js),eolfilled
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.40=fore:#ffffff
# JS Default
style.hypertext.41=fore:#ffffff,$(fontcolour.js)
# JS Comment
style.hypertext.42=$(colour.code.comment.box),$(fontcolour.js)
# JS Line Comment
style.hypertext.43=$(colour.code.comment.line),$(fontcolour.js)
# JS Doc comment
style.hypertext.44=$(colour.code.comment.doc),bold,$(fontcolour.js)
# JS Number
style.hypertext.45=$(colour.number),$(fontcolour.js)
# JS Word
style.hypertext.46=fore:$(t.white),$(fontcolour.js)
# JS Keyword
style.hypertext.47=$(colour.keyword),$(fontcolour.js)
# JS Double quoted string
#~ style.hypertext.48=$(colour.string),$(fontcolour.js),back:#3c3c42
#~ style.hypertext.48=$(colour.string),$(fontcolour.js),back:$(t.charcoal)
style.hypertext.48=$(t.pink),$(t.pink),back:$(t.charcoal)
# JS Single quoted string
#~ style.hypertext.49=$(colour.string),$(fontcolour.js),back:#3c3c42
style.hypertext.49=$(colour.string),$(fontcolour.js),back:$(t.charcoal)
# JS Symbols
style.hypertext.50=$(colour.operator),$(fontcolour.js)
# JavaScript EOL
style.hypertext.51=back:#BFBBB0,eolfilled
# JavaScript RegEx
#~ style.hypertext.52=back:#FFBBB0
style.hypertext.52=fore:$(t.greenwhite),$(font.monospace),back:$(t.darkolive),eolfilled
[htmlaspjs]
# ASP Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.55=fore:#ffffff
# JS Default
style.hypertext.56=fore:#ffffff,bold,$(font.js),back:#DFDF7F,eolfilled
# JS Comment
style.hypertext.57=fore:#007F00,$(font.js),back:#DFDF7F,eolfilled
# JS Line Comment
style.hypertext.58=fore:#007F00,$(font.js),back:#DFDF7F
# JS Doc comment
style.hypertext.59=fore:#7F7F7F,bold,$(font.js),back:#DFDF7F,eolfilled
# JS Number
style.hypertext.60=fore:#007F7F,$(font.js),back:#DFDF7F
# JS Word
style.hypertext.61=fore:#000000,$(font.js),back:#DFDF7F
# JS Keyword
style.hypertext.62=fore:#00007F,bold,$(font.js),back:#DFDF7F
# JS Double quoted string
style.hypertext.63=fore:#7F007F,$(font.js),back:#DFDF7F
# JS Single quoted string
style.hypertext.64=fore:#7F007F,$(font.js),back:#DFDF7F
# JS Symbols
style.hypertext.65=fore:#000000,bold,$(font.js),back:#DFDF7F
# JavaScript EOL
style.hypertext.66=back:#BFBBB0,eolfilled
# JavaScript RegEx
style.hypertext.67=back:#FFBBB0
[htmlvbs]
# Embedded VBS
# Start
style.hypertext.70=
# Default
style.hypertext.71=$(font.vbs),back:#EFEFFF,fore:#000000,eolfilled
# Comment
style.hypertext.72=$(font.comment),back:#EFEFFF,fore:#008000,eolfilled
# Number
style.hypertext.73=$(font.vbs),back:#EFEFFF,fore:#008080,eolfilled
# KeyWord
style.hypertext.74=$(font.vbs),back:#EFEFFF,fore:#000080,bold,eolfilled
# String
style.hypertext.75=$(font.vbs),back:#EFEFFF,fore:#800080,eolfilled
# Identifier
style.hypertext.76=$(font.vbs),back:#EFEFFF,fore:#000080,eolfilled
# Unterminated string
style.hypertext.77=$(font.vbs),back:#7F7FFF,fore:#000080,eolfilled
[htmlaspvbs]
# ASP VBS
# Start
style.hypertext.80=
# Default
style.hypertext.81=$(font.vbs),back:#CFCFEF,fore:#000000,eolfilled
# Comment
style.hypertext.82=$(font.comment),back:#CFCFEF,fore:#008000,eolfilled
# Number
style.hypertext.83=$(font.vbs),back:#CFCFEF,fore:#008080,eolfilled
# KeyWord
style.hypertext.84=$(font.vbs),back:#CFCFEF,fore:#000080,bold,eolfilled
# String
style.hypertext.85=$(font.vbs),back:#CFCFEF,fore:#800080,eolfilled
# Identifier
style.hypertext.86=$(font.vbs),back:#CFCFEF,fore:#000080,eolfilled
# Unterminated string
style.hypertext.87=$(font.vbs),back:#7F7FBF,fore:#000080,eolfilled
[htmlpy]
# Embedded Python
style.hypertext.90=fore:#808080
style.hypertext.91=fore:#808080,back:#EFFFEF,eolfilled
# Comment
style.hypertext.92=fore:#007F00,$(font.comment),back:#EFFFEF,eolfilled
# Number
style.hypertext.93=fore:#007F7F,back:#EFFFEF,eolfilled
# String
style.hypertext.94=fore:#7F007F,$(font.monospace),back:#EFFFEF,eolfilled
# Single quoted string
style.hypertext.95=fore:#7F007F,$(font.monospace),back:#EFFFEF,eolfilled
# Keyword
style.hypertext.96=fore:#00007F,bold,back:#EFFFEF,eolfilled
# Triple quotes
style.hypertext.97=fore:#7F0000,back:#EFFFEF,eolfilled
# Triple double quotes
style.hypertext.98=fore:#7F0000,back:#EFFFEF,eolfilled
# Class name definition
style.hypertext.99=fore:#0000FF,bold,back:#EFFFEF,eolfilled
# Function or method name definition
style.hypertext.100=fore:#007F7F,bold,back:#EFFFEF,eolfilled
# Operators
style.hypertext.101=bold,back:#EFFFEF,eolfilled
# Identifiers
style.hypertext.102=back:#EFFFEF,eolfilled
[htmlasppy]
# ASP Python
style.hypertext.105=fore:#808080
style.hypertext.106=fore:#808080,back:#CFEFCF,eolfilled
# Comment
style.hypertext.107=fore:#007F00,$(font.comment),back:#CFEFCF,eolfilled
# Number
style.hypertext.108=fore:#007F7F,back:#CFEFCF,eolfilled
# String
style.hypertext.109=fore:#7F007F,$(font.monospace),back:#CFEFCF,eolfilled
style.hypertext.109=fore:$(colour.string)
# Single quoted string
style.hypertext.110=fore:#7F007F,$(font.monospace),back:#CFEFCF,eolfilled
# Keyword
style.hypertext.111=fore:#00007F,bold,back:#CFEFCF,eolfilled
# Triple quotes
style.hypertext.112=fore:#7F0000,back:#CFEFCF,eolfilled
# Triple double quotes
style.hypertext.113=fore:#7F0000,back:#CFEFCF,eolfilled
# Class name definition
style.hypertext.114=fore:#0000FF,bold,back:#CFEFCF,eolfilled
# Function or method name definition
style.hypertext.115=fore:#007F7F,bold,back:#CFEFCF,eolfilled
# Operators
style.hypertext.116=bold,back:#CFEFCF,eolfilled
# Identifiers
style.hypertext.117=back:#CFEFCF,eolfilled

[php]
#
# --- PHP styling -------------------------------------------------------------
#
# Default
style.hypertext.118=fore:$(t.white),back:$(t.midnight),eolfilled
# Double quoted String
style.hypertext.119=fore:$(t.greenwhite),back:$(t.darkolive),eolfilled
# Single quoted string
style.hypertext.120=fore:$(t.greenwhite),back:$(t.darkolive),eolfilled
# Keyword
style.hypertext.121=fore:$(t.orange),back:$(t.midnight)
#~ style.hypertext.121=fore:$(t.lightyellow),back:$(t.midnight)
#~ style.hypertext.121=fore:#EEA620,back:$(t.midnight)
#~ style.hypertext.121=fore:#F6D392,back:$(t.midnight)
# Number
style.hypertext.122=fore:$(t.lightyellow),back:$(t.midnight)
#~ style.hypertext.122=fore:$(t.orange),back:$(t.midnight)
# Variable
style.hypertext.123=fore:$(t.white),back:$(t.midnight)
#~ style.hypertext.123=fore:$(t.white),back:$(t.midnight)
# Comment
style.hypertext.124=$(colour.code.comment.box),$(font.code.comment.box),back:$(t.midnight),eolfilled
# One line comment
style.hypertext.125=$(colour.code.comment.box),$(font.code.comment.box),back:$(t.midnight),eolfilled
# PHP variable in double quoted string
style.hypertext.126=fore:$(t.lightyellow),back:$(t.darkolive),eolfilled
#~ style.hypertext.126=fore:$(t.lightyellow),back:$(t.midnight),eolfilled
# PHP complex variable
style.hypertext.104=fore:$(t.lightyellow),back:$(t.darkolive)
# PHP operator
style.hypertext.127=fore:$(t.green),back:$(t.midnight)

[xml]
# XML: eXtensible Markup Language
# For XML, there is no list of known tags or attributes so all are coloured known

# Default
style.xml.0=fore:$(t.cyan),$(font.text)
# Tags
style.xml.1=fore:$(t.cyan)
# Unknown Tags
style.xml.2=fore:#000080
# Attributes
style.xml.3=fore:#008080
# Unknown Attributes
style.xml.4=fore:#008080
# Numbers
style.xml.5=$(colour.number)
# Double quoted strings
style.xml.6=$(colour.string)
# Single quoted strings
style.xml.7=$(colour.string)
# Other inside tag
style.xml.8=fore:#800080
# Comment
style.xml.9=fore:#808000
# Entities
style.xml.10=fore:#800080,$(font.text)
# XML style tag ends '/>'
style.xml.11=fore:#000080
# XML identifier start '<?'
style.xml.12=fore:#800080,bold
# XML identifier end '?>'
style.xml.13=fore:#800080,bold
# CDATA
style.xml.17=fore:#800000,back:#FFF0F0,$(font.text),eolfilled
# Question
style.xml.18=fore:#800000
# Unquoted Value
style.xml.19=fore:#608060
# SGML tags <! ... >
style.xml.21=fore:#000080,back:#EFEFFF
# SGML command
style.xml.22=fore:#000080,back:#EFEFFF,bold
# SGML 1st param
style.xml.23=fore:#006600,back:#EFEFFF
# SGML double string
style.xml.24=fore:#800000,back:#EFEFFF
# SGML single string
style.xml.25=fore:#993300,back:#EFEFFF
# SGML error
style.xml.26=fore:#800000,back:#FF6666
# SGML special (#xxxx type)
style.xml.27=fore:#3366FF,back:#EFEFFF
# SGML entity
style.xml.28=fore:#333333,back:#EFEFFF
# SGML comment
style.xml.29=fore:#808000,back:#EFEFFF
# SGML block
style.xml.31=fore:#000066,back:#CCCCE0
# No brace matching in XML
braces.xml.style=31

# --- CSS Styles --------------------------------------------------------------
[css]
# Default
style.css.32=$(font.code.base),back:$(t.midnight),eolfilled
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.css.0=fore:$(t.darkgrey)
# Selector (HTML tag)
style.css.1=fore:$(t.lightpurple)
# Class selector ([HtmlTag].classSelector)
style.css.2=fore:$(t.skyblue)
# Pseudo class (HtmlTag:pseudoClass)
style.css.3=fore:$(t.skyblue)
# Unknown Pseudo class
style.css.4=fore:$(t.green)
# Operator
style.css.5=fore:$(t.grey)
# CSS1 Property
style.css.6=fore:$(t.purplewhite)
# Unknown Property
style.css.7=fore:$(t.pink)
# Value
style.css.8=fore:$(t.white)
# Comment
style.css.9=$(colour.code.comment.box),$(font.code.comment.box)
# ID selector (#IdSel)
style.css.10=fore:$(t.skyblue)
# Important
style.css.11=fore:$(t.grey)
# At-rule (@)
style.css.12=fore:$(t.greenwhite)
# Double quoted strings
style.css.13=fore:$(t.bluewhite)
# Single quoted strings
style.css.14=fore:$(t.bluewhite)
# CSS2 Property
style.css.15=fore:$(t.lightpurple)
# Attribute selection ([att='val'])
style.css.16=fore:$(t.skyblue)

[bash]
# --- Bash styles -------------------------------------------------------------
#
# The bash styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Bash lexer - not because this is a good way to display Bash.

file.patterns.bash=*.sh;*.ksh

style.bash.32=
# White space
style.bash.0=fore:$(t.black),$(font.base)
# Error
style.bash.1=$(colour.error)
# Comment
style.bash.2=$(colour.code.comment.box),$(font.code.comment.box)
# Number
style.bash.3=fore:$(t.green)
# Keyword
style.bash.4=fore:$(t.cyan)
# Double quoted string
style.bash.5=fore:$(t.lightgreen)
# Single quoted string
style.bash.6=fore:$(t.lightgreen)
# Operators
style.bash.7=$(t.white)
# Identifiers (functions, etc.)
style.bash.8=fore:$(t.white)
# Scalars: $var
style.bash.9=fore:$(t.green)
# Parameter expansion: ${var}
style.bash.10=fore:#000000,back:$(t.white)
# Back Ticks
style.bash.11=fore:$(t.bluewhite),back:$(t.charcoal)
# Here-doc (delimiter)
style.bash.12=fore:$(t.grey)
# Here-doc (single quoted, q)
style.bash.13=fore:$(t.grey)
# Braces are only matched in operator style
braces.bash.style=7

[make]
# Makefile styles

# Default
style.makefile.0=fore:$(t.white)
# Comment: #
style.makefile.1=$(colour.other.comment),$(font.code.comment.box)
# Pre-processor or other comment: !
style.makefile.2=$(colour.preproc)
# Variable: $(x)
style.makefile.3=fore:$(t.bluewhite)
# Operator
style.makefile.4=fore:$(t.cyan)
# Target
style.makefile.5=fore:$(t.pink)
# Error
style.makefile.9=$(colour.error),eolfilled
# Matched Operators
style.makefile.34=fore:#0000FF,notbold
style.makefile.35=fore:#FF0000,notbold

comment.block.makefile=#~


# --- SQL section -------------------------------------------------------------
[sql]
filter.sql=SQL (sql)|*.sql|AQL (aql)|*.aql|MySQL (qbquery)|*.dbquery

file.patterns.sql=*.sql;*.qbquery
file.patterns.plsql=*.spec;*.body;*.sps;*.spb;*.sf;*.sp;*.aql

lexer.$(file.patterns.sql)=sql
lexer.$(file.patterns.plsql)=sql

comment.block.sql=--
comment.block.at.line.start.sql=1


# Braces are only matched in operator style
braces.sql.style=10
# Enables backslash as an escape character
sql.backslash.escapes=1

# Override keywordclass.php with another file if present
import mysqlkeywords2

# SQL styles
# White space
style.sql.0=fore:$(t.darkgrey)
# Comment
style.sql.1=$(colour.code.comment.box),$(font.comment)
# Line Comment
style.sql.2=$(colour.code.comment.line),$(font.comment)
# Doc comment
style.sql.3=$(colour.code.comment.line)
# Number
style.sql.4=fore:$(t.lightgreen)
# Keyword
style.sql.5=fore:$(t.green)
# Double quoted string
style.sql.6=fore:$(t.greenwhite),back:$(t.midnight)
# Single quoted string
style.sql.7=fore:$(t.greenwhite),back:$(t.midnight)
# SQL*Plus
style.sql.8=$(colour.preproc)
# SQL*Plus PROMPT
style.sql.9=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled
# Operators
style.sql.10=fore:$(t.lightyellow)
# Identifiers
style.sql.11=
# End of line where string is not closed / not used
style.sql.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# SQL*Plus Comment
style.sql.13=fore:$(t.darkgrey),$(font.comment)
# not used
# style.sql.14=
# Hash Line Comment
style.sql.15=
# Keywords2: Database objects
style.sql.16=fore$(t.orange)
# Comment Doc Keyword
style.sql.17=fore:$(t.darkgrey),$(font.code.comment.doc)
# Comment Doc Keyword Error
style.sql.18=fore:$(t.silver),$(font.code.comment.doc)
# Keywords5: User Keywords 1
style.sql.19=fore:$(t.pink)
# Keywords6: User Keywords 2
style.sql.20=fore:#B00040
# Keywords7: User Keywords 3
style.sql.21=fore:#8B0000
# Keywords8: User Keywords 4
style.sql.22=fore:#800080


[asm]
comment.block.asm=;


# Assembler Styles
style.asm.32=font:Courier New,size:11
# Default
style.asm.0=
# Comment
style.asm.1=$(colour.code.comment.line)
# Number
style.asm.2=fore:$(t.skyblue)
# String
style.asm.3=$(colour.string)
# Operator
style.asm.4=fore:$(t.silver)
# Identifier
style.asm.5=
# CPU instruction
style.asm.6=fore:$(t.green)
#fore:#0000ff
# FPU instruction
style.asm.7=fore:$(t.green),italics
# Register
style.asm.8=fore:$(t.greenwhite),bold
# assembler Directive
style.asm.9=fore:$(t.grey)
# assembler Directive Operand
style.asm.10=fore:$(t.bluewhite)
# Comment block (GNU as /*...*/ syntax, unimplemented)
style.asm.11=$(colour.code.comment.box),$(font.code.comment.box)
# Character/String (single quote) (also character prefix in GNU as)
style.asm.12=fore:$(t.bluewhite)
# End of line where string is not closed
style.asm.13=fore:#000000,back:#E0C0E0,eolfilled
# Extended instructions
style.asm.14=fore:$(t.cyan)

[batch]


# Batch styles

# List from http://www.easydos.com/dosindex.html
# I limit here the commands to those built in command.com, ie. I don't list external Dos commands
# if [no] (test) (command) -- test is EXIST (filename) | (string1)==(string2) | ERRORLEVEL (number)
# for %%(variable) IN (set) DO (command) -- variable is [a-zA-Z] -- eg for %%X in (*.txt) do type %%X
keywordclass.batch=rem set if exist errorlevel for in do \
break call chcp cd chdir choice cls country ctty date del erase dir echo \
exit goto loadfix loadhigh mkdir md move path pause prompt rename ren \
rmdir rd shift time type ver verify vol \
com con lpt nul \
color copy defined else not start
keywords.$(file.patterns.batch)=$(keywordclass.batch)

# Optional list of external commands to highlight in style 5.
# If not set all commands are highlighted in style 5.
#keywords2.$(file.patterns.batch)=append attrib chkdsk comp diskcomp

# Default
style.batch.0=fore:$(t.white)
# Comment (rem or ::)
style.batch.1=fore:$(t.lightyellow),$(font.comment)
# Keywords
style.batch.2=fore:$(t.green),bold
# Label (line beginning with ':')
style.batch.3=fore:$(t.green),back:#606060,eolfilled
# Hide command character ('@')
style.batch.4=fore:$(t.green)
# External commands
style.batch.5=fore:$(t.bluewhite)
# Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
style.batch.6=fore:$(t.greenwhite)
# Operator: * ? < > |
style.batch.7=fore:$(t.bluewhite)

comment.block.batch=REM

[diff]
# Difference styles (.diff .patch)

# Default
style.diff.0=fore:$(t.white)
# Comment (part before "diff ..." or "--- ..." and , Only in ..., Binary file...)
style.diff.1=$(colour.code.comment.line)
# Command (diff ...)
style.diff.2=fore:$(t.grey)
# Source file (--- ...) and Destination file (+++ ...)
style.diff.3=fore:$(t.white)
# Position setting (@@ ...)
style.diff.4=fore:$(t.skyblue)
# Line removal (-...)
style.diff.5=fore:$(t.pink)
# Line addition (+...)
style.diff.6=fore:$(t.green)
# Line change (!...)
style.diff.7=fore:$(t.cyan)

[perl]
word.characters.$(file.patterns.perl)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.perl=#~
#~ comment.block.at.line.start.perl=1

block.start.$(file.patterns.perl)=10 {
block.end.$(file.patterns.perl)=10 }

colour.perl.heredoc=$(colour.embedded.comment)

#fold.perl.package=1
#fold.perl.pod=1

# Perl styles
# The perl styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Perl lexer - not because this is a good way to display Perl.
style.perl.32=fore:$(t.white)
# White space
#style.perl.0=fore:#808080,$(font.base)
# Error
#~ style.perl.1=$(colour.error)
style.perl.1=fore:$(t.purplewhite)

# Comment
style.perl.2=$(colour.code.comment.box),$(font.code.comment.box)
# POD: = at beginning of line
style.perl.3=fore:#004000,back:#E0FFE0,$(font.text),eolfilled
style.perl.3=fore:$(t.purplewhite)
# Number
style.perl.4=fore:$(t.pink)
# Keyword
style.perl.5=fore:$(t.cyan)
#~ style.perl.5=fore:$(t.aqua)
# Double quoted string
style.perl.6=fore:$(t.orange)
# Single quoted string
style.perl.7=fore:$(t.orange)
# $vars in double quoted string
style.perl.43=fore:$(t.lightyellow)
# $vars in regex
style.perl.45=fore:$(t.lightyellow)

style.perl.6=fore:$(t.purple)
style.perl.7=fore:$(t.purple)
style.perl.43=fore:$(t.midpurple)


# Symbols / Punctuation. Currently not used by LexPerl.
style.perl.8=$(colour.notused),$(font.notused)
style.perl.8=fore:$(t.white)
# Preprocessor. Currently not used by LexPerl.
style.perl.9=$(colour.notused),$(font.notused)
style.perl.9=fore:$(t.white)

# Operators
style.perl.10=fore:$(t.grey)
# Identifiers (functions, etc.)
style.perl.11=fore:$(t.lightyellow)
style.perl.11=fore:$(t.skyblue)
#~ style.perl.11=fore:$(t.orange)
#~ style.perl.11=fore:$(t.white)
# Scalars: $var
style.perl.12=fore:$(t.white)
# Array: @var
style.perl.13=fore:$(t.white)
# Hash: %var
style.perl.14=fore:$(t.white)

style.perl.11=fore:$(t.lightyellow)
style.perl.12=fore:$(t.white)
style.perl.13=fore:$(t.white)
style.perl.14=fore:$(t.skyblue)




# Symbol table: *var
style.perl.15=fore:$(t.purplewhite)
# Regex: /re/ or m{re}
style.perl.17=fore:$(t.green),back:$(t.darkolive)
# Substitution: s/re/ore/
style.perl.18=fore:$(t.green),back:$(t.darkolive)
# Long Quote (qq, qr, qw, qx) -- obsolete: replaced by qq, qx, qr, qw
style.perl.19=fore:$(t.lightpurple)
# Back Ticks
style.perl.20=fore:$(t.purplewhite)
# Data Section: __DATA__ or __END__ at beginning of line
style.perl.21=fore:$(t.purplewhite)
# Here-doc (delimiter)
style.perl.22=fore:$(t.purplewhite)
# Here-doc (single quoted, q)
style.perl.23=fore:$(t.purplewhite)
# Here-doc (double quoted, qq)
style.perl.24=fore:$(t.purplewhite)
# Here-doc (back ticks, qx)
style.perl.25=fore:$(t.purplewhite)
# Single quoted string, generic
style.perl.26=fore:$(t.purplewhite)
# qq = Double quoted string
style.perl.27=fore:$(t.lightpurple)
# qx = Back ticks
style.perl.28=fore:$(t.lightpurple)
# qr = Regex
style.perl.29=fore:$(t.lightpurple)
# qw = Array
style.perl.30=fore:$(t.lightpurple)
# POD: verbatim paragraphs
style.perl.31=fore:$(t.purplewhite)
# subroutine prototype
style.perl.40=fore:$(t.purplewhite)
# format identifier
style.perl.41=fore:$(t.purplewhite)
# format body
style.perl.42=fore:$(t.purplewhite)

# Braces are only matched in operator style
braces.perl.style=10







